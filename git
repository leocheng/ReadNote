每个文件只有三种状态：
	1）已提交：committed
	2）已修改：modified
	3）已暂存：staged

配置用户信息：
	git config user.name "mingxiao.li"
	git config user.email "mingxiao.li@tcl.com"

初始化当前目录：
	git init

	git add *.c
	git add README
	git commit -m 'initial project version'

从现有仓库克隆：
	git clone [url]

检查当前文件状态（列出修改过的文件）：
	git status

跟踪新文件：
	git add [path]
	git add命令功能：1）跟踪新文件
			2）把已跟踪的文件放到暂存区
			3）在合并的时候，将有冲突的文件标记为已解决状态

暂存已修改文件：

忽略某些文件：cat .gitignore
	.gitignore格式规范：
		1）忽略空行以及注释符#开头的行
		2）可以使用标准的glob模式匹配
		3）匹配模式最后跟反斜杠（/）表示忽略目录
		4）要忽略指定模式以外的文件或目录,可以在模式前加上惊叹号(!)取反

查看尚未暂存的文件更新了哪些部分：
	git diff

提交更新:
	git commit


移除文件：
	git rm

启动图形化工具：在终端输入gitk

撤销操作：
	git commit --amend

取消已经暂存的文件：
	git reset HEAD <file>

取消对文件的修改：
	git checkout -- <file>

============================================
查看当前的远程库：
	git remote

添加远程仓库：
	git remote add [shortname] [url]

从远程仓库抓取数据：
	git fetch [remote-name]

推送数据到远程仓库:
	git push [remote-name] [branch-name]

查看远程仓库信息：
	git remote show [remote-name]

======================================
源码比较工具：diff
打补丁工具：patch
	1) diff/patch这对工具在数学上来说，diff是对2个集合求差，patch是求和
	diff A B > C 生成A和B的diff文件C
	patch A C 给A打上diff文件得到B
	patch -R B C B还原为A



















	
